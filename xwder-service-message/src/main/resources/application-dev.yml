# 开发环境配置
server:
  # 服务端口
  port: 9003
  servlet:
    # 项目contextPath
    context-path: /
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # tomcat最大线程数，默认为200
    max-threads: 800
    # Tomcat启动初始化的线程数，默认值25
    min-spare-threads: 30

spring:
  devtools:
    restart:
      enabled: true
    cache: false

  # 模板引擎
  thymeleaf:
    mode: LEGACYHTML5
    encoding: utf-8
    # 禁用缓存
    cache: false

  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss

  application:
    name: xwder-service-message


  mail:
    host: smtp.qq.com
    username: admin@xwder.com
    password: pexeokjrufteibei
    default-encoding: utf-8
    properties:
      mail:
        debug:
          true

feign:
  hystrix:
    enabled: true
  client:
    config:
      default:  # 服务名，default表示所有服务
        connectTimeout: 10000
        readTimeout: 60000
        loggerLevel: full  # full | basic | none | headers
        #requestInterceptors: 拦截器
#开启驼峰命名转换
#mybatis:
#  configuration:
#    map-underscore-to-camel-case: true

# 邮件发送人
mail:
  fromMail:
    addr: service@xwder.com


eureka:
  client:
    service-url:
      # 指定eureka server通信地址，注意/eureka/小尾巴不能少
      defaultZone: http://eureka:123456@localhost:8001/eureka/,http://eureka:123456@localhost:8002/eureka/

    # 清理间隔 实际开发过程中，我们可能会不停地重启服务，由于Eureka有自己的保护机制，故节点下线后，服务信息还会一直存在于Eureka中。
    # 我们可以通过增加一些配置让移除的速度更快一点，当然只在开发环境下使用，生产环境下不推荐使用
    # 用于开启健康检查，需要在pom.xml中引入actuator的依赖
    healthcheck:
      enabled: true

  instance:
    # 是否注册IP到eureka server，如不指定或设为false，那就会注册主机名到eureka server
    prefer-ip-address: true
    # 定义实例ID格式
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
    # Eureka Client发送心跳给server端的频率
    lease-renewal-interval-in-seconds: 5
    # 表示Eureka Server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则移除该Instance。
    lease-expiration-duration-in-seconds: 5
    # 自定义这个跳转的地址
    #status-page-url: http://xwder.com


ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000


management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        # 暴露.端点
        include: '*'
        # 取消暴露metrics端点，如需暴露多个，用,分隔；如需暴露所有端点，用'*'
        #exclude: '*'

# 日志配置
logging:
  level:
    com.dimple: debug
    org.springframework: WARN
    org.spring.springboot.dao: debug

# 京东短信 （需要审核）
jdcloud-sms:
  url: https://msg.plus.jdcloud.com/api/sms/multiSend
  account: 13509433172_p
  password: db9939e06d2980202f134b1894d75fc3
  sign: 【服务管理系统】
  extend:

# 腾讯云短信 直达
myqcloud-sms:
  SecretId: AKID16m8tm1RrlE0s6fe50atymhKe1faomyn6p6a
  SecretKey: A7kH2xeJEFPK8fmIz8hDx2i3J1qt9fufZ4ebz0
  url: https://service-g5r3b98v-1251224662.ap-shanghai.apigateway.myqcloud.com/release/sendsms

ftqq:
  seckey: SCU66294Te1803dd659b9bb762389d599ce3cc85c5dca7899c59f4
  url: https://sc.ftqq.com/SCU66294Te1803dd659b9bb762389d599ce3cc85c5dca7899c59f4.send?text=

wxpusher:
  biz:
    apptoken: AT_aYrQQ57QWGX7CTn90JLVAojAT4wAqIBC

alertover:
  send-source: s-98f1992e-397f-4273-b08f-b1ca77db
  receive-source: g-1fa686bc-2445-4260-b7ed-552ac38f
  request-url: https://api.alertover.com/v1/alert
