# 开发环境配置
server:
  # 服务端口
  port: 8080
  servlet:
    # 项目contextPath
    context-path: /
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # tomcat最大线程数，默认为200
    max-threads: 800
    # Tomcat启动初始化的线程数，默认值25
    min-spare-threads: 30

system:
  # 系统名称
  chineseName: xwder
  # cookie token
  sessionTokenName: xwder-token
  # 名称
  name: xwder-app
  # 邮箱验证回调地址
  mailVerifyUrl: http://web.ngrok.xwder.com/user/mail/verifyMail.html
  # 用户注册是否微信通知管理员
  newUserReigsterWeChatNoticeAdmin: true
  # 管理员微信通知 wxPusher UID
  adminWxPusherUid: UID_3izJBf0A7BG2CsQ8bdaBjnm4JKho


spring:
  devtools:
    restart:
      enabled: true

  application:
    name: xwder-biz-app

  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        format_sql: true
        # 指出是什么操作生成了该语句
        use_sql_comments: true
    show-sql: true

  datasource:
    # url: jdbc:mysql://127.0.0.1:8066/xwder?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    # slq显示参数值
    url: jdbc:log4jdbc:mysql://127.0.0.1:8066/xwder?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      validation-query: SELECT 1
      initial-size: 1
      # 初始化大小，最小，最大
      min-idle: 3
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 30000
      # 打开PSCache，并且指定每个连接上PSCache的大小
      max-pool-prepared-statement-per-connection-size: 20
      pool-prepared-statements: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filter:
        stat,wall,log4j
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  redis:
    database: 1
    host: 114.67.85.146
    port: 6379
    password: 9t6U3OBxxd
    jedis:
      pool:
        #连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        #连接池中的最大空闲连接
        max-idle: 8
        #连接池中的最小空闲连接
        min-idle: 0
    #连接超时时间（毫秒
    timeout: 30000


  servlet:
    multipart:
      enabled: true
      max-file-size: 200MB
      max-request-size: 200MB

  logging:
    config: classpath:log4j2.yml

  rabbitmq:
    host: 114.67.85.146
    port: 5672
    username: admin
    password: q77ZA9NxKQHIDV7c
    #虚拟host 可以不设置,使用server默认host
    virtual-host: xwder
    #消息确认配置项

    #确认消息已发送到交换机(Exchange)
    #publisher-confirms: true
    #确认消息已发送到队列(Queue)
    #publisher-returns: true

  mvc:
    static-path-pattern: /static/**

  # 模板引擎
  thymeleaf:
    mode: LEGACYHTML5
    encoding: UTF-8
    servlet:
      content-type: text/html
    # 禁用缓存
    cache: false
    suffix: .html
    prefix: classpath:/templates/
    check-template-location: true

eureka:
  client:
    service-url:
      # 指定eureka server通信地址，注意/eureka/小尾巴不能少
      defaultZone: https://eureka:11NcXZgZLD@registry.xwder.com/eureka/

    # 清理间隔 实际开发过程中，我们可能会不停地重启服务，由于Eureka有自己的保护机制，故节点下线后，服务信息还会一直存在于Eureka中。
    # 我们可以通过增加一些配置让移除的速度更快一点，当然只在开发环境下使用，生产环境下不推荐使用
    # 用于开启健康检查，需要在pom.xml中引入actuator的依赖
    healthcheck:
      enabled: true

  instance:
    # 是否注册IP到eureka server，如不指定或设为false，那就会注册主机名到eureka server
    prefer-ip-address: true
    # 定义实例ID格式
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
    # Eureka Client发送心跳给server端的频率
    lease-renewal-interval-in-seconds: 5
    # 表示Eureka Server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则移除该Instance。
    lease-expiration-duration-in-seconds: 5

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        # 暴露.端点
        include: '*'
        # 取消暴露metrics端点，如需暴露多个，用,分隔；如需暴露所有端点，用'*'
        #exclude: '*'

logging:
  file: D:/usr/local/xwder/logs/xwder-biz-app/xwder-biz-app.log

#图形验证码配置
kaptcha:
  height: 50
  width: 200
  content:
    length: 4
    source: 0123456789abcdefghijklmnopqrstuvwxyz
    space: 2
  font:
    color: blue
    name: 宋体,楷体,微软雅黑
    size: 40
  background-color:
    from: lightGray
    to: white
  border:
    enabled: true
    color: black
    thickness: 1

# rabbitmq mq配置信息
mq:
  exchange:
    sms: xwder.exchange.sms
    email: xwder.exchange.email
    wechat: xwder.exchange.wechat
    alertover: xwder.exchange.alertover

  queue:
    # 书籍模块短信消息队列
    sms: xwder.queue.sms
    # 邮箱验证消息队列
    email: xwder.queue.email
    # 书籍模块alertover消息队列
    alertover: xwder.queue.alertover
    # 书籍模块微信通知消息队列
    wechat: xwder.queue.wechat

  routingkey:
    sms:
      # 书籍模块短信消息队列
      chapterUpdate: xwder-sms-chapterUpdate
    email:
      # 书籍模块邮件消息队列
      chapterUpdate: xwder-email-chapterUpdate
      # 邮箱验证消息队列
      verifyEmail: xwder-email-verifyEmail
    alertover:
      # 书籍模块alertover消息队列
      chapterUpdate: xwder-alertover-chapterUpdate
    wechat:
      # 书籍模块微信通知消息队列
      chapterUpdate: xwder-wechat-chapterUpdate


novel:
  book:
    # 书籍章节本地存放目录
    dir: I:\\novel
lottery:
  save:
    # 上传的lottery本地存放目录
    dir: E:\\lottery

video:
  upload:
    # 上传的video保存目录
    saveDir: E:\\videoUploadSaveDir
  # video切割文件时间长度
  videoSplitTime: 5

baidu:
  ocr:
    key: 7M62UKysmTRUEZCDiosiz378
    secret: 8pQZfUBY80ApokLsUnZ11eICv0DmuQX3
tencent:
  auth:
    secretId: AKIDLUSAl6fONBk5A7TCi07wWrzsUPyInSFn
    secretKey: QYXKvLey66wY1RbsUs20sSlnv72fvuc1
  cos:
    bucketName: cdn-1256177279
    region: ap-chongqing
  cdn:
    prefixurl: https://cdn.xwder.com
