<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xwder.framework.domain.book.mapper.BookChapterMapper">
  <resultMap id="BaseResultMap" type="com.xwder.framework.domain.book.BookChapter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="chapter_word_size" jdbcType="INTEGER" property="chapterWordSize" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="source_url" jdbcType="VARCHAR" property="sourceUrl" />
    <result column="chapter_no" jdbcType="INTEGER" property="chapterNo" />
    <result column="chapter_sequence" jdbcType="VARCHAR" property="chapterSequence" />
    <result column="chapter_article" jdbcType="VARCHAR" property="chapterArticle" />
    <result column="chapter_name" jdbcType="VARCHAR" property="chapterName" />
    <result column="volume_name" jdbcType="VARCHAR" property="volumeName" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xwder.framework.domain.book.BookChapter">
    <result column="chapter_content" jdbcType="LONGVARCHAR" property="chapterContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, book_name, book_id, author, chapter_word_size, update_time, source_url, chapter_no, 
    chapter_sequence, chapter_article, chapter_name, volume_name, gmt_create, gmt_modified
  </sql>
  <sql id="Blob_Column_List">
    chapter_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xwder.framework.domain.book.BookChapterExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xwder.framework.domain.book.BookChapterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from book_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_chapter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_chapter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xwder.framework.domain.book.BookChapterExample">
    delete from book_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xwder.framework.domain.book.BookChapter">
    insert into book_chapter (id, book_name, book_id, 
      author, chapter_word_size, update_time, 
      source_url, chapter_no, chapter_sequence, 
      chapter_article, chapter_name, volume_name, 
      gmt_create, gmt_modified, chapter_content
      )
    values (#{id,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{bookId,jdbcType=INTEGER}, 
      #{author,jdbcType=VARCHAR}, #{chapterWordSize,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{sourceUrl,jdbcType=VARCHAR}, #{chapterNo,jdbcType=INTEGER}, #{chapterSequence,jdbcType=VARCHAR}, 
      #{chapterArticle,jdbcType=VARCHAR}, #{chapterName,jdbcType=VARCHAR}, #{volumeName,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{chapterContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xwder.framework.domain.book.BookChapter">
    insert into book_chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="chapterWordSize != null">
        chapter_word_size,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="sourceUrl != null">
        source_url,
      </if>
      <if test="chapterNo != null">
        chapter_no,
      </if>
      <if test="chapterSequence != null">
        chapter_sequence,
      </if>
      <if test="chapterArticle != null">
        chapter_article,
      </if>
      <if test="chapterName != null">
        chapter_name,
      </if>
      <if test="volumeName != null">
        volume_name,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="chapterContent != null">
        chapter_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="chapterWordSize != null">
        #{chapterWordSize,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sourceUrl != null">
        #{sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="chapterNo != null">
        #{chapterNo,jdbcType=INTEGER},
      </if>
      <if test="chapterSequence != null">
        #{chapterSequence,jdbcType=VARCHAR},
      </if>
      <if test="chapterArticle != null">
        #{chapterArticle,jdbcType=VARCHAR},
      </if>
      <if test="chapterName != null">
        #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="volumeName != null">
        #{volumeName,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="chapterContent != null">
        #{chapterContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xwder.framework.domain.book.BookChapterExample" resultType="java.lang.Integer">
    select count(*) from book_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_chapter
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterWordSize != null">
        chapter_word_size = #{record.chapterWordSize,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sourceUrl != null">
        source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterNo != null">
        chapter_no = #{record.chapterNo,jdbcType=INTEGER},
      </if>
      <if test="record.chapterSequence != null">
        chapter_sequence = #{record.chapterSequence,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterArticle != null">
        chapter_article = #{record.chapterArticle,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterName != null">
        chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      </if>
      <if test="record.volumeName != null">
        volume_name = #{record.volumeName,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.chapterContent != null">
        chapter_content = #{record.chapterContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update book_chapter
    set id = #{record.id,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      chapter_word_size = #{record.chapterWordSize,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      chapter_no = #{record.chapterNo,jdbcType=INTEGER},
      chapter_sequence = #{record.chapterSequence,jdbcType=VARCHAR},
      chapter_article = #{record.chapterArticle,jdbcType=VARCHAR},
      chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      volume_name = #{record.volumeName,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      chapter_content = #{record.chapterContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_chapter
    set id = #{record.id,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      chapter_word_size = #{record.chapterWordSize,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      chapter_no = #{record.chapterNo,jdbcType=INTEGER},
      chapter_sequence = #{record.chapterSequence,jdbcType=VARCHAR},
      chapter_article = #{record.chapterArticle,jdbcType=VARCHAR},
      chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      volume_name = #{record.volumeName,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xwder.framework.domain.book.BookChapter">
    update book_chapter
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="chapterWordSize != null">
        chapter_word_size = #{chapterWordSize,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sourceUrl != null">
        source_url = #{sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="chapterNo != null">
        chapter_no = #{chapterNo,jdbcType=INTEGER},
      </if>
      <if test="chapterSequence != null">
        chapter_sequence = #{chapterSequence,jdbcType=VARCHAR},
      </if>
      <if test="chapterArticle != null">
        chapter_article = #{chapterArticle,jdbcType=VARCHAR},
      </if>
      <if test="chapterName != null">
        chapter_name = #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="volumeName != null">
        volume_name = #{volumeName,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="chapterContent != null">
        chapter_content = #{chapterContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xwder.framework.domain.book.BookChapter">
    update book_chapter
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      chapter_word_size = #{chapterWordSize,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      source_url = #{sourceUrl,jdbcType=VARCHAR},
      chapter_no = #{chapterNo,jdbcType=INTEGER},
      chapter_sequence = #{chapterSequence,jdbcType=VARCHAR},
      chapter_article = #{chapterArticle,jdbcType=VARCHAR},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      volume_name = #{volumeName,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      chapter_content = #{chapterContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xwder.framework.domain.book.BookChapter">
    update book_chapter
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      chapter_word_size = #{chapterWordSize,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      source_url = #{sourceUrl,jdbcType=VARCHAR},
      chapter_no = #{chapterNo,jdbcType=INTEGER},
      chapter_sequence = #{chapterSequence,jdbcType=VARCHAR},
      chapter_article = #{chapterArticle,jdbcType=VARCHAR},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      volume_name = #{volumeName,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.xwder.framework.domain.book.BookChapter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="chapter_word_size" jdbcType="INTEGER" property="chapterWordSize" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="source_url" jdbcType="VARCHAR" property="sourceUrl" />
    <result column="chapter_no" jdbcType="INTEGER" property="chapterNo" />
    <result column="chapter_sequence" jdbcType="VARCHAR" property="chapterSequence" />
    <result column="chapter_article" jdbcType="VARCHAR" property="chapterArticle" />
    <result column="chapter_name" jdbcType="VARCHAR" property="chapterName" />
    <result column="volume_name" jdbcType="VARCHAR" property="volumeName" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xwder.framework.domain.book.BookChapter">
    <result column="chapter_content" jdbcType="LONGVARCHAR" property="chapterContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, book_name, book_id, author, chapter_word_size, update_time, source_url, chapter_no, 
    chapter_sequence, chapter_article, chapter_name, volume_name, gmt_create, gmt_modified
  </sql>
  <sql id="Blob_Column_List">
    chapter_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xwder.framework.domain.book.BookChapterExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xwder.framework.domain.book.BookChapterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_chapter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_chapter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xwder.framework.domain.book.BookChapterExample">
    delete from book_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xwder.framework.domain.book.BookChapter">
    insert into book_chapter (id, book_name, book_id, 
      author, chapter_word_size, update_time, 
      source_url, chapter_no, chapter_sequence, 
      chapter_article, chapter_name, volume_name, 
      gmt_create, gmt_modified, chapter_content
      )
    values (#{id,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{bookId,jdbcType=INTEGER}, 
      #{author,jdbcType=VARCHAR}, #{chapterWordSize,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{sourceUrl,jdbcType=VARCHAR}, #{chapterNo,jdbcType=INTEGER}, #{chapterSequence,jdbcType=VARCHAR}, 
      #{chapterArticle,jdbcType=VARCHAR}, #{chapterName,jdbcType=VARCHAR}, #{volumeName,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{chapterContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xwder.framework.domain.book.BookChapter">
    insert into book_chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="chapterWordSize != null">
        chapter_word_size,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="sourceUrl != null">
        source_url,
      </if>
      <if test="chapterNo != null">
        chapter_no,
      </if>
      <if test="chapterSequence != null">
        chapter_sequence,
      </if>
      <if test="chapterArticle != null">
        chapter_article,
      </if>
      <if test="chapterName != null">
        chapter_name,
      </if>
      <if test="volumeName != null">
        volume_name,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="chapterContent != null">
        chapter_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="chapterWordSize != null">
        #{chapterWordSize,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sourceUrl != null">
        #{sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="chapterNo != null">
        #{chapterNo,jdbcType=INTEGER},
      </if>
      <if test="chapterSequence != null">
        #{chapterSequence,jdbcType=VARCHAR},
      </if>
      <if test="chapterArticle != null">
        #{chapterArticle,jdbcType=VARCHAR},
      </if>
      <if test="chapterName != null">
        #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="volumeName != null">
        #{volumeName,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="chapterContent != null">
        #{chapterContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xwder.framework.domain.book.BookChapterExample" resultType="java.lang.Integer">
    select count(*) from book_chapter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_chapter
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterWordSize != null">
        chapter_word_size = #{record.chapterWordSize,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sourceUrl != null">
        source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterNo != null">
        chapter_no = #{record.chapterNo,jdbcType=INTEGER},
      </if>
      <if test="record.chapterSequence != null">
        chapter_sequence = #{record.chapterSequence,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterArticle != null">
        chapter_article = #{record.chapterArticle,jdbcType=VARCHAR},
      </if>
      <if test="record.chapterName != null">
        chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      </if>
      <if test="record.volumeName != null">
        volume_name = #{record.volumeName,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.chapterContent != null">
        chapter_content = #{record.chapterContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update book_chapter
    set id = #{record.id,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      chapter_word_size = #{record.chapterWordSize,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      chapter_no = #{record.chapterNo,jdbcType=INTEGER},
      chapter_sequence = #{record.chapterSequence,jdbcType=VARCHAR},
      chapter_article = #{record.chapterArticle,jdbcType=VARCHAR},
      chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      volume_name = #{record.volumeName,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      chapter_content = #{record.chapterContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_chapter
    set id = #{record.id,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=INTEGER},
      author = #{record.author,jdbcType=VARCHAR},
      chapter_word_size = #{record.chapterWordSize,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      source_url = #{record.sourceUrl,jdbcType=VARCHAR},
      chapter_no = #{record.chapterNo,jdbcType=INTEGER},
      chapter_sequence = #{record.chapterSequence,jdbcType=VARCHAR},
      chapter_article = #{record.chapterArticle,jdbcType=VARCHAR},
      chapter_name = #{record.chapterName,jdbcType=VARCHAR},
      volume_name = #{record.volumeName,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xwder.framework.domain.book.BookChapter">
    update book_chapter
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="chapterWordSize != null">
        chapter_word_size = #{chapterWordSize,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sourceUrl != null">
        source_url = #{sourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="chapterNo != null">
        chapter_no = #{chapterNo,jdbcType=INTEGER},
      </if>
      <if test="chapterSequence != null">
        chapter_sequence = #{chapterSequence,jdbcType=VARCHAR},
      </if>
      <if test="chapterArticle != null">
        chapter_article = #{chapterArticle,jdbcType=VARCHAR},
      </if>
      <if test="chapterName != null">
        chapter_name = #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="volumeName != null">
        volume_name = #{volumeName,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="chapterContent != null">
        chapter_content = #{chapterContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xwder.framework.domain.book.BookChapter">
    update book_chapter
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      chapter_word_size = #{chapterWordSize,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      source_url = #{sourceUrl,jdbcType=VARCHAR},
      chapter_no = #{chapterNo,jdbcType=INTEGER},
      chapter_sequence = #{chapterSequence,jdbcType=VARCHAR},
      chapter_article = #{chapterArticle,jdbcType=VARCHAR},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      volume_name = #{volumeName,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      chapter_content = #{chapterContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xwder.framework.domain.book.BookChapter">
    update book_chapter
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      chapter_word_size = #{chapterWordSize,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      source_url = #{sourceUrl,jdbcType=VARCHAR},
      chapter_no = #{chapterNo,jdbcType=INTEGER},
      chapter_sequence = #{chapterSequence,jdbcType=VARCHAR},
      chapter_article = #{chapterArticle,jdbcType=VARCHAR},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      volume_name = #{volumeName,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>