# 开发环境配置
server:
  # 服务端口
  port: 9001
  servlet:
    # 项目contextPath
    context-path: /
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # tomcat最大线程数，默认为200
    max-threads: 800
    # Tomcat启动初始化的线程数，默认值25
    min-spare-threads: 30


spring:
  devtools:
    restart:
      enabled: true

  application:
    name: xwder-biz-book

  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

  datasource:
    url: jdbc:mysql://114.67.85.146:3306/spider?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: spider
    password: ENC(zK30mohEDxgkl9V+kCie3cCAUoie9/8n0g2SMhceaAQ=)
    driver-class-name: com.mysql.cj.jdbc.Driver
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据

#开启驼峰命名转换
mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations:
    - classpath:mapper/*.xml
    - classpath*:com/**/mapper/*.xml

#数据库密码加密
jasypt:
  encryptor:
    password: spider

eureka:
  client:
    service-url:
      # 指定eureka server通信地址，注意/eureka/小尾巴不能少
      defaultZone: http://eureka:123456@localhost:8001/eureka/

    # 清理间隔 实际开发过程中，我们可能会不停地重启服务，由于Eureka有自己的保护机制，故节点下线后，服务信息还会一直存在于Eureka中。
    # 我们可以通过增加一些配置让移除的速度更快一点，当然只在开发环境下使用，生产环境下不推荐使用
    # 用于开启健康检查，需要在pom.xml中引入actuator的依赖
    healthcheck:
      enabled: true

  instance:
    # 是否注册IP到eureka server，如不指定或设为false，那就会注册主机名到eureka server
    prefer-ip-address: true
    # 定义实例ID格式
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
    # Eureka Client发送心跳给server端的频率
    lease-renewal-interval-in-seconds: 5
    # 表示Eureka Server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则移除该Instance。
    lease-expiration-duration-in-seconds: 5


feign:
  hystrix:
    enabled: true
  client:
    config:
      default:  # 服务名，default表示所有服务
        connectTimeout: 10000
        readTimeout: 60000
        loggerLevel: full  # full | basic | none | headers
        #requestInterceptors: 拦截器

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        # 暴露.端点
        include: '*'
        # 取消暴露metrics端点，如需暴露多个，用,分隔；如需暴露所有端点，用'*'
        #exclude: '*'
