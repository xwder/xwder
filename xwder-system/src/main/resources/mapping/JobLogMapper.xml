<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xwder.system.domain.mapper.JobLogMapper" >
  <resultMap id="BaseResultMap" type="com.xwder.system.domain.JobLog" >
    <id column="job_log_id" property="jobLogId" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_group" property="jobGroup" jdbcType="VARCHAR" />
    <result column="method_name" property="methodName" jdbcType="VARCHAR" />
    <result column="method_params" property="methodParams" jdbcType="VARCHAR" />
    <result column="job_message" property="jobMessage" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="exception_info" property="exceptionInfo" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    job_log_id, job_name, job_group, method_name, method_params, job_message, status, 
    exception_info, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xwder.system.domain.JobLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_job_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_job_log
    where job_log_id = #{jobLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_job_log
    where job_log_id = #{jobLogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xwder.system.domain.JobLogExample" >
    delete from sys_job_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xwder.system.domain.JobLog" >
    insert into sys_job_log (job_log_id, job_name, job_group, 
      method_name, method_params, job_message, 
      status, exception_info, create_time
      )
    values (#{jobLogId,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR}, 
      #{methodName,jdbcType=VARCHAR}, #{methodParams,jdbcType=VARCHAR}, #{jobMessage,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{exceptionInfo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xwder.system.domain.JobLog" >
    insert into sys_job_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobLogId != null" >
        job_log_id,
      </if>
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="jobGroup != null" >
        job_group,
      </if>
      <if test="methodName != null" >
        method_name,
      </if>
      <if test="methodParams != null" >
        method_params,
      </if>
      <if test="jobMessage != null" >
        job_message,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="exceptionInfo != null" >
        exception_info,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobLogId != null" >
        #{jobLogId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="methodParams != null" >
        #{methodParams,jdbcType=VARCHAR},
      </if>
      <if test="jobMessage != null" >
        #{jobMessage,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="exceptionInfo != null" >
        #{exceptionInfo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xwder.system.domain.JobLogExample" resultType="java.lang.Integer" >
    select count(*) from sys_job_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_job_log
    <set >
      <if test="record.jobLogId != null" >
        job_log_id = #{record.jobLogId,jdbcType=INTEGER},
      </if>
      <if test="record.jobName != null" >
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobGroup != null" >
        job_group = #{record.jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.methodName != null" >
        method_name = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.methodParams != null" >
        method_params = #{record.methodParams,jdbcType=VARCHAR},
      </if>
      <if test="record.jobMessage != null" >
        job_message = #{record.jobMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.exceptionInfo != null" >
        exception_info = #{record.exceptionInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_job_log
    set job_log_id = #{record.jobLogId,jdbcType=INTEGER},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_group = #{record.jobGroup,jdbcType=VARCHAR},
      method_name = #{record.methodName,jdbcType=VARCHAR},
      method_params = #{record.methodParams,jdbcType=VARCHAR},
      job_message = #{record.jobMessage,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      exception_info = #{record.exceptionInfo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xwder.system.domain.JobLog" >
    update sys_job_log
    <set >
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        job_group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="methodParams != null" >
        method_params = #{methodParams,jdbcType=VARCHAR},
      </if>
      <if test="jobMessage != null" >
        job_message = #{jobMessage,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="exceptionInfo != null" >
        exception_info = #{exceptionInfo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where job_log_id = #{jobLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xwder.system.domain.JobLog" >
    update sys_job_log
    set job_name = #{jobName,jdbcType=VARCHAR},
      job_group = #{jobGroup,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      method_params = #{methodParams,jdbcType=VARCHAR},
      job_message = #{jobMessage,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      exception_info = #{exceptionInfo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where job_log_id = #{jobLogId,jdbcType=INTEGER}
  </update>
</mapper>